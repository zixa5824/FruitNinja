@startuml

package SliceableObjects {

    interface ISliceableObject{
        +getObjectType(): String
        +getXlocation(): int
        +getYlocation(): int
        +getMaxHeight(): int
        +getInitialVelocity(): int
        +getFallingVelocity(): int
        +isSliced(): Boolean
        +hasMovedOffScreen(): Boolean
        +slice()
        +move()

    }


    abstract class Bomb
    abstract class Fruit
    abstract class SliceableObject {

        #associatedScore: int
        #associatedFallLiveLoss: int
        #xLocation: double
        #yLocation: double
        #maxHeight: double
        #initialVelocity: double
        #fallingVelocity: double
        #currentXVelocity: double
        #currentYVelocity: double
        #isSliced: boolean
        #hasMovedOffScreen: boolean
        #ObjectType: String
        #myImageView: ImageView
        #standardPrefSize: double
        #localPrefSize: double

        +move()

        }

    ISliceableObject <|-- SliceableObject

    SliceableObject <|-- Fruit
    SliceableObject <|--  Bomb

    Fruit <|-- SlowFruit
    Fruit <|-- NormalFruit
    Fruit <|-- FastFruit
    Fruit <|-- LifeFruit
    Fruit <|-- ExtraBonusFruit

    Bomb <|-- DangerousBomb
    Bomb <|-- FatalBomb


}
package GameModes {
interface IGameModeStrategy <<Interface>> {
    +getInitialLives() : int
    +timerType() : int
    +NewBatch() :List<ISliceableObject>
    +goOffScreen()
    +sliceObjects():int
    +isGameOver():boolean
}

IGameModeStrategy <-- ClassicMode
IGameModeStrategy <-- ArcadeMode

abstract class DifficultyDecorator

IGameModeStrategy <-- DifficultyDecorator

DifficultyDecorator <-- EasyMode
DifficultyDecorator <-- HardMode


}
@enduml